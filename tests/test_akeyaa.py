"""
Test the inakeyaa.py functions.

Author
------
    Dr. Randal J. Barnes
    Department of Civil, Environmental, and Geo- Engineering
    University of Minnesota

Version
-------
    12 May 2020
"""

import numpy as np

from akeyaa.akeyaa import inakeyaa, bayesian_regression, smithpdf


#---------------------------------------------------------------------------
def test_akeyaa():
    data = np.array([
        [751., 841., 53.18, 2.],
        [255., 254., 51.02, 2.],
        [506., 814., 52.64, 2.],
        [699., 244., 51.89, 2.],
        [891., 929., 53.64, 2.],
        [959., 350., 52.62, 2.],
        [547., 197., 51.49, 2.],
        [139., 251., 50.78, 2.],
        [149., 616., 51.53, 2.],
        [258., 473., 51.46, 2.]
        ])
    i50 = 0.001
    (alpha, f, KLdiv) = inakeyaa(i50, data, './')

    f_ans = np.array([
        0.239241768488426, 0.241106001476104, 0.242944793980837,
        0.244756978339650, 0.246541397424383, 0.248296905723179,
        0.250022370397243, 0.251716672312138, 0.253378707043078,
        0.255007385853843, 0.256601636649075, 0.258160404899902,
        0.259682654542950, 0.261167368852970, 0.262613551289387,
        0.264020226317254, 0.265386440203144, 0.266711261786635,
        0.267993783228118, 0.269233120733730])

    KLdiv_ans = np.array([
        0.00504965004644314,  0.00270890349606301,
        0.000900802136746266, 7.6623918933708e-005,
        0.0193548702292703,   0.00191691022661386,
        0.000625483857452116, 0.00678223831622554,
        0.000884028530218539, 0.000463783052355434])

    assert(np.allclose(f, f_ans))
    assert(np.allclose(KLdiv, KLdiv_ans))


#--------------------------------------------------------------------------
def test_bayesian_regression():
    data = np.array([
        [751., 841., 53.18, 2.],
        [255., 254., 51.02, 2.],
        [506., 814., 52.64, 2.],
        [699., 244., 51.89, 2.],
        [891., 929., 53.64, 2.],
        [959., 350., 52.62, 2.],
        [547., 197., 51.49, 2.],
        [139., 251., 50.78, 2.],
        [149., 616., 51.53, 2.],
        [258., 473., 51.46, 2.]
        ])
    i50 = 0.001
    (mu, sigma) = bayesian_regression(i50, data)

    mu_ans = np.array([0.000326324847500637, 0.000291466465797025])

    sigma_ans = np.array([
        [ 6.27519301387955e-007, -2.38189347940752e-008],
        [-2.38189347940752e-008,  6.39825975889726e-007]
        ])

    assert(np.allclose(mu, mu_ans))
    assert(np.allclose(sigma, sigma_ans))


#--------------------------------------------------------------------------
def test_smithpdf():
    mu = np.array( [[1.], [2.]] )
    sigma = np.array( [[2., 1.], [1., 3.]] )
    alpha = np.linspace(0, 2*np.pi, 10)

    pdf = smithpdf(alpha, mu, sigma)

    pdf_ans = np.array([
        0.082633326709771, 0.453847423028614, 0.538084798525049,
        0.117852523781454, 0.051437060901120, 0.040453966191302,
        0.037600718897055, 0.030693276068009, 0.035604961954848,
        0.082633326709771])

    assert(np.allclose(pdf, pdf_ans))


# -----------------------------------------------------------------------------
if __name__ == "__main__":
    # execute only if run as a script
    test_akeyaa()
    test_bayesian_regression()
    test_smithpdf()